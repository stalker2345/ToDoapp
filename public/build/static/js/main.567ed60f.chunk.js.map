{"version":3,"sources":["assets/img/remove.svg","assets/img/close.svg","assets/img/add.svg","assets/img/edit.svg","components/Budge/index.jsx","components/List/index.jsx","components/AddButtonList/index.jsx","components/Tasks/AddTaskForm.jsx","components/Tasks/Task.jsx","components/Tasks/index.jsx","App.js","index.js"],"names":["module","exports","Badge","color","onClick","className","classNames","List","items","isRemovable","onRemove","onClickItem","activeItem","active","map","item","index","key","id","icon","name","hasOwnProperty","tasks","length","e","window","confirm","axios","delete","then","src","removeSvg","alt","AddListButton","onAdd","colors","useState","visiblePopup","setVisiblePopup","selectedColor","setSelectedColor","inputValue","setInputValue","isLoading","setIsLoading","useEffect","Array","isArray","onClose","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","CloseSvg","value","onChange","target","type","placeholder","post","colorId","data","colorName","filter","c","listObj","finally","alert","AddTaskForm","list","onTaskAdd","taskName","setTaskName","isSending","setIsSending","addSvg","obj","listId","text","completed","catch","Task","onEdit","onComplite","checkboxState","setCheckboxState","onMouseDown","preventDefault","checked","htmlFor","Tasks","lists","onEditTitle","onAddTask","onEditTask","onCompliteTask","style","hex","x","prompt","patch","editSvg","task","App","get","setLists","setColors","setTasks","history","useHistory","location","useLocation","onEditListTitle","newLists","onRemoveTask","taskString","newList","pathname","split","find","Number","push","goForward","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.567ed60f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/remove.b36a3633.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.1175686f.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.78cc8215.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.413a1061.svg\";","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nimport \"./Budge.scss\";\r\n\r\nexport default function Badge({ color, onClick, className }) {\r\n  return (\r\n    <i\r\n      onClick={onClick}\r\n      className={classNames(\r\n        \"badge\",\r\n        {\r\n          [`badge--${color}`]: color,\r\n        },\r\n        className\r\n      )}\r\n    ></i>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./List.scss\";\r\nimport classNames from \"classnames\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Badge from \"../Budge/index.jsx\";\r\n\r\nimport removeSvg from \"../../assets/img/remove.svg\";\r\n\r\nconst List = ({\r\n  items,\r\n  isRemovable,\r\n  onClick,\r\n  onRemove,\r\n  onClickItem,\r\n  activeItem,\r\n  active,\r\n}) => {\r\n  const removed = (e) => {\r\n    window.confirm(\"Вы хотите удалить?\");\r\n    axios.delete(\"http://localhost:3001/lists/\" + e).then(onRemove({ id: e }));\r\n  };\r\n\r\n  return (\r\n    <ul onClick={onClick} className=\"list\">\r\n      {items.map((item, index) => (\r\n        <li\r\n          key={index}\r\n          className={classNames(item.className, {\r\n            active: active || (activeItem && activeItem.id === item.id),\r\n          })}\r\n          onClick={onClickItem && (() => onClickItem(item))}\r\n        >\r\n          <i>\r\n            {item.icon || <Badge color={item.color.name || item.color}></Badge>}\r\n          </i>\r\n          <span>\r\n            {item.name}\r\n            <span className=\"tasks-length\">\r\n              {item.hasOwnProperty(\"tasks\") &&\r\n                item.id &&\r\n                `  (${item.tasks.length})`}\r\n            </span>\r\n          </span>\r\n\r\n          {isRemovable && (\r\n            <img\r\n              onClick={() => removed(item.id)}\r\n              className=\"list__remove-icon\"\r\n              src={removeSvg}\r\n              alt=\"Remove icon\"\r\n            />\r\n          )}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport List from \"../List\";\r\nimport Badge from \"../Budge/index.jsx\";\r\n\r\nimport \"./AddButtonList.scss\";\r\n\r\nimport CloseSvg from \"../../assets/img/close.svg\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst AddListButton = ({ onAdd, colors }) => {\r\n  const [visiblePopup, setVisiblePopup] = useState(false);\r\n  const [selectedColor, setSelectedColor] = useState(3);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(colors)) {\r\n      setSelectedColor(colors[0].id);\r\n    }\r\n  }, [colors]);\r\n\r\n  const onClose = () => {\r\n    setVisiblePopup(false);\r\n    setInputValue(\"\");\r\n    setSelectedColor(colors[0].id);\r\n  };\r\n\r\n  const addList = () => {\r\n    if (inputValue !== \"\") {\r\n      setIsLoading(true);\r\n      axios\r\n        .post(\"http://localhost:3001/lists\", {\r\n          name: inputValue,\r\n          colorId: selectedColor,\r\n        })\r\n        .then(({ data }) => {\r\n          const colorName = colors.filter((c) => c.id === selectedColor)[0];\r\n          const listObj = { ...data, color: colorName };\r\n\r\n          onAdd(listObj);\r\n          onClose();\r\n        })\r\n        .finally(setIsLoading(false));\r\n      return;\r\n    }\r\n    return alert(\"введите\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <List\r\n        onClick={() => setVisiblePopup(!visiblePopup)}\r\n        items={[\r\n          {\r\n            className: \"list__add-button\",\r\n            icon: (\r\n              <svg\r\n                width=\"12\"\r\n                height=\"12\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M8 1V15\"\r\n                  stroke=\"black\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n                <path\r\n                  d=\"M1 8H15\"\r\n                  stroke=\"black\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n              </svg>\r\n            ),\r\n            name: \"Добавить список\",\r\n          },\r\n        ]}\r\n      />\r\n      {visiblePopup && (\r\n        <div className=\"add-list__popup\">\r\n          <img\r\n            onClick={onClose}\r\n            src={CloseSvg}\r\n            alt=\"close-btn\"\r\n            className=\"add-list__popup-close-btn\"\r\n          />\r\n          <input\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n            className=\"field\"\r\n            type=\"text\"\r\n            placeholder=\"Название списка\"\r\n          ></input>\r\n          <div className=\"add-list__popup_colors\">\r\n            {colors.map((color) => (\r\n              <Badge\r\n                onClick={() => setSelectedColor(color.id)}\r\n                key={color.id}\r\n                color={color.name}\r\n                className={selectedColor === color.id && \"active\"}\r\n              ></Badge>\r\n            ))}\r\n          </div>\r\n          <button onClick={addList} className=\"button\">\r\n            {isLoading ? \"Добавление...\" : \"Добавить\"}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddListButton;\r\n","import React, { useState } from \"react\";\r\n\r\nimport addSvg from \"../../assets/img/add.svg\";\r\n\r\nimport axios from \"axios\";\r\n\r\nfunction AddTaskForm({ list, onTaskAdd }) {\r\n  const [visiblePopup, setVisiblePopup] = useState(false);\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  const [isSending, setIsSending] = useState(false);\r\n\r\n  const addTask = () => {\r\n    const obj = {\r\n      listId: list.id,\r\n      text: taskName,\r\n      completed: true,\r\n    };\r\n    axios\r\n      .post(\"http://localhost:3001/tasks\", obj)\r\n      .then(({ data }) => {\r\n        onTaskAdd(list.id, data);\r\n      })\r\n      .catch(() => alert(\"ошибка\"))\r\n      .finally(setIsSending(false));\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks__form\">\r\n      {!visiblePopup && (\r\n        <div\r\n          onClick={() => setVisiblePopup(!visiblePopup)}\r\n          className=\"tasks__form-new\"\r\n        >\r\n          <img src={addSvg} alt=\"Добавить\"></img>\r\n          <span>Новая Задача</span>\r\n        </div>\r\n      )}\r\n\r\n      {visiblePopup && (\r\n        <div className=\"tasks__form-add-block\">\r\n          <input\r\n            className=\"field field--task\"\r\n            type=\"text\"\r\n            placeholder=\"Название задачи\"\r\n            value={taskName}\r\n            onChange={(e) => setTaskName(e.target.value)}\r\n          ></input>\r\n          <button onClick={addTask} className=\"button\">\r\n            {isSending ? \"Задача добавляется\" : \"Добавить задачу\"}\r\n          </button>\r\n          <button\r\n            onClick={() => setVisiblePopup(!visiblePopup)}\r\n            className=\"button button--grey\"\r\n          >\r\n            Отмена\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTaskForm;\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Task({\r\n  list,\r\n  id,\r\n  text,\r\n  completed,\r\n  onRemove,\r\n  onEdit,\r\n  onComplite,\r\n}) {\r\n  const [checkboxState, setCheckboxState] = useState(completed);\r\n\r\n  const completeTask = () => {\r\n    setCheckboxState(!checkboxState);\r\n    onComplite(id, list.id, !checkboxState);\r\n  };\r\n  return (\r\n    <div key={id} className=\"tasks__items-row\">\r\n      <div onMouseDown={(e) => e.preventDefault()} className=\"checkbox\">\r\n        <input\r\n          onChange={completeTask}\r\n          id={`task-${id}`}\r\n          type=\"checkbox\"\r\n          checked={checkboxState}\r\n        />\r\n        <label htmlFor={`task-${id}`}>\r\n          <svg\r\n            width=\"11\"\r\n            height=\"8\"\r\n            viewBox=\"0 0 11 8\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\"\r\n              stroke=\"#000\"\r\n              strokeWidth=\"1.5\"\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n            />\r\n          </svg>\r\n        </label>\r\n      </div>\r\n      <p>{text}</p>\r\n      <div className=\"tasks__items-row-actions\">\r\n        <div onClick={() => onEdit(id, list.id)}>\r\n          <svg\r\n            width=\"11\"\r\n            height=\"11\"\r\n            viewBox=\"0 0 15 15\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M0 12.0504V14.5834C0 14.8167 0.183308 15 0.41661 15H2.9496C3.05792 15 3.16624 14.9583 3.24123 14.875L12.34 5.78458L9.21542 2.66001L0.124983 11.7504C0.0416611 11.8338 0 11.9337 0 12.0504ZM14.7563 3.36825C14.8336 3.29116 14.8949 3.1996 14.9367 3.0988C14.9785 2.99801 15 2.88995 15 2.78083C15 2.6717 14.9785 2.56365 14.9367 2.46285C14.8949 2.36205 14.8336 2.27049 14.7563 2.19341L12.8066 0.24367C12.7295 0.166428 12.638 0.105146 12.5372 0.0633343C12.4364 0.021522 12.3283 0 12.2192 0C12.1101 0 12.002 0.021522 11.9012 0.0633343C11.8004 0.105146 11.7088 0.166428 11.6318 0.24367L10.107 1.76846L13.2315 4.89304L14.7563 3.36825V3.36825Z\"\r\n              fill=\"black\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <div onClick={() => onRemove(id, list.id)}>\r\n          <svg\r\n            width=\"11\"\r\n            height=\"11\"\r\n            viewBox=\"0 0 11 11\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M6.87215 5.5L10.7129 1.65926C10.8952 1.47731 10.9977 1.23039 10.9979 0.972832C10.9982 0.715276 10.8961 0.468178 10.7141 0.285898C10.5321 0.103617 10.2852 0.00108525 10.0277 0.000857792C9.77011 0.000630336 9.52302 0.102726 9.34074 0.284685L5.5 4.12542L1.65926 0.284685C1.47698 0.102404 1.22976 0 0.971974 0C0.714191 0 0.466965 0.102404 0.284685 0.284685C0.102404 0.466965 0 0.714191 0 0.971974C0 1.22976 0.102404 1.47698 0.284685 1.65926L4.12542 5.5L0.284685 9.34074C0.102404 9.52302 0 9.77024 0 10.028C0 10.2858 0.102404 10.533 0.284685 10.7153C0.466965 10.8976 0.714191 11 0.971974 11C1.22976 11 1.47698 10.8976 1.65926 10.7153L5.5 6.87458L9.34074 10.7153C9.52302 10.8976 9.77024 11 10.028 11C10.2858 11 10.533 10.8976 10.7153 10.7153C10.8976 10.533 11 10.2858 11 10.028C11 9.77024 10.8976 9.52302 10.7153 9.34074L6.87215 5.5Z\"\r\n              fill=\"black\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport AddTaskForm from \"./AddTaskForm\";\r\nimport Task from \"./Task\";\r\n\r\nimport editSvg from \"../../assets/img/edit.svg\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport \"./Tasks.scss\";\r\n\r\nconst Tasks = ({\r\n  lists,\r\n  onEditTitle,\r\n  onAddTask,\r\n  onRemove,\r\n  onEditTask,\r\n  onCompliteTask,\r\n}) => {\r\n  const editTitle = () => {\r\n    const x = window.prompt(\"Введите новое значение\", lists.name);\r\n    x && onEditTitle(lists.id, x);\r\n\r\n    x &&\r\n      axios\r\n        .patch(\"http://localhost:3001/lists/\" + lists.id, {\r\n          name: x,\r\n        })\r\n        .catch(() => alert(\"ошибка\"));\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks\">\r\n      <h2 style={{ color: lists.color.hex }} className=\"tasks__title\">\r\n        {lists.name}\r\n        <img onClick={editTitle} src={editSvg} alt=\"Edit icon\" />\r\n      </h2>\r\n      <div className=\"tasks__items\">\r\n        {lists.hasOwnProperty(\"tasks\") && !lists.tasks.length && (\r\n          <h2>Задачи отсутствуют</h2>\r\n        )}\r\n        <ul>\r\n          <li>\r\n            {lists.hasOwnProperty(\"tasks\") &&\r\n              lists.tasks.map((task, index) => (\r\n                <Task\r\n                  list={lists}\r\n                  key={index}\r\n                  {...task}\r\n                  onRemove={onRemove}\r\n                  onEdit={onEditTask}\r\n                  onComplite={onCompliteTask}\r\n                />\r\n              ))}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <AddTaskForm list={lists} onTaskAdd={onAddTask}></AddTaskForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { List, AddListButton, Tasks } from \"./components\";\r\nimport { Route, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:3001/lists?_expand=color&_embed=tasks\")\r\n      .then(({ data }) => {\r\n        setLists(data);\r\n      });\r\n    axios\r\n      .get(\"http://localhost:3001/colors\")\r\n      .then(({ data }) => setColors(data));\r\n  }, []);\r\n\r\n  const [tasks, setTasks] = useState(null);\r\n  const [colors, setColors] = useState(null);\r\n  const [lists, setLists] = useState(null);\r\n  let history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const onAddList = (obj) => {\r\n    const newLists = [...lists, obj];\r\n\r\n    setLists(newLists);\r\n\r\n    history.push(`/lists/${obj.id}`);\r\n    history.goForward();\r\n  };\r\n\r\n  const onRemoveList = (obj) => {\r\n    const newLists = lists.filter((x) => x.id !== obj.id);\r\n    setLists(newLists);\r\n  };\r\n\r\n  const onEditListTitle = (id, name) => {\r\n    const newLists = lists.map((list) => {\r\n      if (list.id === id) {\r\n        list.name = name;\r\n      }\r\n      return list;\r\n    });\r\n    setLists(newLists);\r\n  };\r\n\r\n  const onAddTask = (listId, task) => {\r\n    const newLists = lists.map((list) => {\r\n      if (list.id === listId) {\r\n        list.tasks = [...list.tasks, task];\r\n      }\r\n      return list;\r\n    });\r\n    setLists(newLists);\r\n  };\r\n\r\n  const onRemoveTask = (id, listId) => {\r\n    if (window.confirm(\"удалить?\")) {\r\n      const newLists = lists.map((list) => {\r\n        if (list.id === listId) {\r\n          list.tasks = list.tasks.filter((task) => task.id !== id);\r\n        }\r\n        return list;\r\n      });\r\n      setLists(newLists);\r\n\r\n      axios\r\n        .delete(\"http://localhost:3001/tasks/\" + id)\r\n        .catch(() => alert(\"ошибка\"));\r\n    }\r\n  };\r\n\r\n  const onEditTask = (id, listId) => {\r\n    const taskString = window.prompt(\"Введите строку\");\r\n\r\n    if (taskString) {\r\n      const newLists = lists.map((list) => {\r\n        if (list.id === listId) {\r\n          list.tasks = list.tasks.map((task) => {\r\n            task.id === id && (task.text = taskString);\r\n            return task;\r\n          });\r\n        }\r\n        return list;\r\n      });\r\n      setLists(newLists);\r\n\r\n      axios\r\n        .patch(\"http://localhost:3001/tasks/\" + id, { text: taskString })\r\n        .catch(() => alert(\"ошибка\"));\r\n    }\r\n  };\r\n\r\n  const onCompliteTask = (id, listId, completed) => {\r\n    const newList = lists.map((list) => {\r\n      if (list.id === listId) {\r\n        list.tasks = list.tasks.map((task) => {\r\n          if (task.id === id) {\r\n            task.completed = completed;\r\n          }\r\n          return task;\r\n        });\r\n      }\r\n      return list;\r\n    });\r\n    setLists(newList);\r\n    axios\r\n      .patch(\"http://localhost:3001/tasks/\" + id, {\r\n        completed: completed,\r\n      })\r\n      .catch(() => {\r\n        alert(\"Не удалось обновить задачу\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    //react-router hooks for routing\r\n    const currentPath = location.pathname;\r\n    const listId = currentPath.split(\"lists/\")[1];\r\n    const task = lists && lists.find((list) => list.id === Number(listId));\r\n\r\n    task && (task.hasOwnProperty(\"tasks\") || (task.tasks = []));\r\n    setTasks(task);\r\n  }, [lists, location]);\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <div className=\"todo__sidebar\">\r\n        <List\r\n          onClickItem={() => {\r\n            history.push(`/`);\r\n          }}\r\n          active={!tasks}\r\n          items={[\r\n            {\r\n              icon: (\r\n                <svg\r\n                  width=\"18\"\r\n                  height=\"18\"\r\n                  viewBox=\"0 0 18 18\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M12.96 8.10001H7.74001C7.24321 8.10001 7.20001 8.50231 7.20001 9.00001C7.20001 9.49771 7.24321 9.90001 7.74001 9.90001H12.96C13.4568 9.90001 13.5 9.49771 13.5 9.00001C13.5 8.50231 13.4568 8.10001 12.96 8.10001V8.10001ZM14.76 12.6H7.74001C7.24321 12.6 7.20001 13.0023 7.20001 13.5C7.20001 13.9977 7.24321 14.4 7.74001 14.4H14.76C15.2568 14.4 15.3 13.9977 15.3 13.5C15.3 13.0023 15.2568 12.6 14.76 12.6ZM7.74001 5.40001H14.76C15.2568 5.40001 15.3 4.99771 15.3 4.50001C15.3 4.00231 15.2568 3.60001 14.76 3.60001H7.74001C7.24321 3.60001 7.20001 4.00231 7.20001 4.50001C7.20001 4.99771 7.24321 5.40001 7.74001 5.40001ZM4.86001 8.10001H3.24001C2.74321 8.10001 2.70001 8.50231 2.70001 9.00001C2.70001 9.49771 2.74321 9.90001 3.24001 9.90001H4.86001C5.35681 9.90001 5.40001 9.49771 5.40001 9.00001C5.40001 8.50231 5.35681 8.10001 4.86001 8.10001ZM4.86001 12.6H3.24001C2.74321 12.6 2.70001 13.0023 2.70001 13.5C2.70001 13.9977 2.74321 14.4 3.24001 14.4H4.86001C5.35681 14.4 5.40001 13.9977 5.40001 13.5C5.40001 13.0023 5.35681 12.6 4.86001 12.6ZM4.86001 3.60001H3.24001C2.74321 3.60001 2.70001 4.00231 2.70001 4.50001C2.70001 4.99771 2.74321 5.40001 3.24001 5.40001H4.86001C5.35681 5.40001 5.40001 4.99771 5.40001 4.50001C5.40001 4.00231 5.35681 3.60001 4.86001 3.60001Z\"\r\n                    fill=\"black\"\r\n                  />\r\n                </svg>\r\n              ),\r\n              name: \"Все задачи\",\r\n            },\r\n          ]}\r\n        />\r\n\r\n        {lists && (\r\n          <List\r\n            items={lists}\r\n            onRemove={onRemoveList}\r\n            isRemovable\r\n            onClickItem={(item) => {\r\n              history.push(`/lists/${item.id}`);\r\n            }}\r\n            activeItem={tasks}\r\n          />\r\n        )}\r\n\r\n        {lists && (\r\n          <AddListButton onAdd={onAddList} colors={colors} lists={lists} />\r\n        )}\r\n      </div>\r\n      <div className=\"todo__tasks\">\r\n        <Route exact path=\"/\">\r\n          {lists &&\r\n            lists.map((list) => (\r\n              <Tasks\r\n                key={list.id}\r\n                lists={list}\r\n                onEditTitle={onEditListTitle}\r\n                onAddTask={onAddTask}\r\n                onRemove={onRemoveTask}\r\n                onEditTask={onEditTask}\r\n                onCompliteTask={onCompliteTask}\r\n              />\r\n            ))}\r\n        </Route>\r\n\r\n        <Route exact path=\"/lists/:id\">\r\n          {tasks && (\r\n            <Tasks\r\n              lists={tasks}\r\n              onEditTitle={onEditListTitle}\r\n              onAddTask={onAddTask}\r\n              onRemove={onRemoveTask}\r\n              onEditTask={onEditTask}\r\n              onCompliteTask={onCompliteTask}\r\n            />\r\n          )}\r\n        </Route>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nimport \"./index.scss\";\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App></App>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}